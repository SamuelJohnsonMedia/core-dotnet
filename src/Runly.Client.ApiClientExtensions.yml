### YamlMime:ManagedReference
items:
- uid: Runly.Client.ApiClientExtensions
  commentId: T:Runly.Client.ApiClientExtensions
  id: ApiClientExtensions
  parent: Runly.Client
  children:
  - Runly.Client.ApiClientExtensions.Enqueue(Runly.Client.IRunClient,System.String,System.String,Runly.Config)
  - Runly.Client.ApiClientExtensions.EnqueueDefaultConfig(Runly.Client.IRunClient,System.String,System.String,System.String,System.String,System.String)
  - Runly.Client.ApiClientExtensions.EnqueueDefaultConfig``1(Runly.Client.IRunClient,System.String,System.String,System.String,System.String)
  - Runly.Client.ApiClientExtensions.EnqueueFromTemplate(Runly.Client.IRunClient,System.String,System.String,System.String,System.Object,System.Boolean)
  - Runly.Client.ApiClientExtensions.GetConfig``1(Runly.Client.IRunClient,System.String,Guid)
  langs:
  - csharp
  - vb
  name: ApiClientExtensions
  nameWithType: ApiClientExtensions
  fullName: Runly.Client.ApiClientExtensions
  type: Class
  source:
    id: ApiClientExtensions
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 11
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nExtension methods for the API clients in Runly.Client.\n"
  example: []
  syntax:
    content: 'public static class ApiClientExtensions : object'
    content.vb: >-
      Public Module ApiClientExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Runly.Client.ApiClientExtensions.GetConfig``1(Runly.Client.IRunClient,System.String,Guid)
  commentId: M:Runly.Client.ApiClientExtensions.GetConfig``1(Runly.Client.IRunClient,System.String,Guid)
  id: GetConfig``1(Runly.Client.IRunClient,System.String,Guid)
  isExtensionMethod: true
  parent: Runly.Client.ApiClientExtensions
  langs:
  - csharp
  - vb
  name: GetConfig<TConfig>(IRunClient, String, Guid)
  nameWithType: ApiClientExtensions.GetConfig<TConfig>(IRunClient, String, Guid)
  fullName: Runly.Client.ApiClientExtensions.GetConfig<TConfig>(Runly.Client.IRunClient, System.String, Guid)
  type: Method
  source:
    id: GetConfig
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 21
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nGets the <xref href=\"Runly.Config\" data-throw-if-not-resolved=\"false\"></xref> for the <code data-dev-comment-type=\"paramref\" class=\"paramref\">runId</code> specified.\n"
  example: []
  syntax:
    content: >-
      public static Task<TConfig> GetConfig<TConfig>(this IRunClient client, string organization, Guid runId)
          where TConfig : Config
    parameters:
    - id: client
      type: Runly.Client.IRunClient
      description: The API client to use.
    - id: organization
      type: System.String
      description: The organization that the run exists in.
    - id: runId
      type: Guid
      description: The ID of the run to get the config for.
    typeParameters:
    - id: TConfig
      description: The type of config to get.
    return:
      type: Task{{TConfig}}
      description: A <xref href="Runly.Config" data-throw-if-not-resolved="false"></xref> of type <code data-dev-comment-type="typeparamref" class="typeparamref">TConfig</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetConfig(Of TConfig As Config)(client As IRunClient, organization As String, runId As Guid) As Task(Of TConfig)
  overload: Runly.Client.ApiClientExtensions.GetConfig*
  nameWithType.vb: ApiClientExtensions.GetConfig(Of TConfig)(IRunClient, String, Guid)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Runly.Client.ApiClientExtensions.GetConfig(Of TConfig)(Runly.Client.IRunClient, System.String, Guid)
  name.vb: GetConfig(Of TConfig)(IRunClient, String, Guid)
- uid: Runly.Client.ApiClientExtensions.Enqueue(Runly.Client.IRunClient,System.String,System.String,Runly.Config)
  commentId: M:Runly.Client.ApiClientExtensions.Enqueue(Runly.Client.IRunClient,System.String,System.String,Runly.Config)
  id: Enqueue(Runly.Client.IRunClient,System.String,System.String,Runly.Config)
  isExtensionMethod: true
  parent: Runly.Client.ApiClientExtensions
  langs:
  - csharp
  - vb
  name: Enqueue(IRunClient, String, String, Config)
  nameWithType: ApiClientExtensions.Enqueue(IRunClient, String, String, Config)
  fullName: Runly.Client.ApiClientExtensions.Enqueue(Runly.Client.IRunClient, System.String, System.String, Runly.Config)
  type: Method
  source:
    id: Enqueue
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 32
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nEnqueues a new run with the <code data-dev-comment-type=\"paramref\" class=\"paramref\">config</code> in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">organization</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">environment</code>.\n"
  example: []
  syntax:
    content: public static Task<Run> Enqueue(this IRunClient client, string organization, string environment, Config config)
    parameters:
    - id: client
      type: Runly.Client.IRunClient
      description: The API client to use.
    - id: organization
      type: System.String
      description: The organization in which the <code data-dev-comment-type="paramref" class="paramref">environment</code> can be found.
    - id: environment
      type: System.String
      description: The environment to enqueue a new run in.
    - id: config
      type: Runly.Config
      description: The <xref href="Runly.Config" data-throw-if-not-resolved="false"></xref> for the new run.
    return:
      type: Task{Runly.Client.Models.Run}
      description: A newly enqueued <xref href="Runly.Client.Models.Run" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Enqueue(client As IRunClient, organization As String, environment As String, config As Config) As Task(Of Run)
  overload: Runly.Client.ApiClientExtensions.Enqueue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Runly.Client.ApiClientExtensions.EnqueueFromTemplate(Runly.Client.IRunClient,System.String,System.String,System.String,System.Object,System.Boolean)
  commentId: M:Runly.Client.ApiClientExtensions.EnqueueFromTemplate(Runly.Client.IRunClient,System.String,System.String,System.String,System.Object,System.Boolean)
  id: EnqueueFromTemplate(Runly.Client.IRunClient,System.String,System.String,System.String,System.Object,System.Boolean)
  isExtensionMethod: true
  parent: Runly.Client.ApiClientExtensions
  langs:
  - csharp
  - vb
  name: EnqueueFromTemplate(IRunClient, String, String, String, Object, Boolean)
  nameWithType: ApiClientExtensions.EnqueueFromTemplate(IRunClient, String, String, String, Object, Boolean)
  fullName: Runly.Client.ApiClientExtensions.EnqueueFromTemplate(Runly.Client.IRunClient, System.String, System.String, System.String, System.Object, System.Boolean)
  type: Method
  source:
    id: EnqueueFromTemplate
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 46
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nEnqueues a new run with the stored config template in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">organization</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">environment</code>. \nOverrides parameters in the config template with values found on <code data-dev-comment-type=\"paramref\" class=\"paramref\">overrides</code>.\n"
  example: []
  syntax:
    content: public static Task<Run> EnqueueFromTemplate(this IRunClient client, string organization, string environment, string template, object overrides = null, bool scheduled = false)
    parameters:
    - id: client
      type: Runly.Client.IRunClient
      description: The API client to use.
    - id: organization
      type: System.String
      description: The organization in which the <code data-dev-comment-type="paramref" class="paramref">environment</code> can be found.
    - id: environment
      type: System.String
      description: The environment to enqueue a new run in.
    - id: template
      type: System.String
      description: The name of the config template to use for the new run.
    - id: overrides
      type: System.Object
      description: When provided, will override parameters in the config template.
    - id: scheduled
      type: System.Boolean
      description: When true, will count the enqueued run as an occurence of the config template&apos;s schedule, affecting the next occurence of the schedule.
    return:
      type: Task{Runly.Client.Models.Run}
      description: A newly enqueued <xref href="Runly.Client.Models.Run" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnqueueFromTemplate(client As IRunClient, organization As String, environment As String, template As String, overrides As Object = Nothing, scheduled As Boolean = False) As Task(Of Run)
  overload: Runly.Client.ApiClientExtensions.EnqueueFromTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig(Runly.Client.IRunClient,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Runly.Client.ApiClientExtensions.EnqueueDefaultConfig(Runly.Client.IRunClient,System.String,System.String,System.String,System.String,System.String)
  id: EnqueueDefaultConfig(Runly.Client.IRunClient,System.String,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Runly.Client.ApiClientExtensions
  langs:
  - csharp
  - vb
  name: EnqueueDefaultConfig(IRunClient, String, String, String, String, String)
  nameWithType: ApiClientExtensions.EnqueueDefaultConfig(IRunClient, String, String, String, String, String)
  fullName: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig(Runly.Client.IRunClient, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    id: EnqueueDefaultConfig
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 66
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nEnqueues a new run with the default config for the <code data-dev-comment-type=\"paramref\" class=\"paramref\">jobType</code> in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">organization</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">environment</code>.\n"
  example: []
  syntax:
    content: public static Task<Run> EnqueueDefaultConfig(this IRunClient client, string organization, string environment, string jobType, string version = null, string package = null)
    parameters:
    - id: client
      type: Runly.Client.IRunClient
      description: The API client to use.
    - id: organization
      type: System.String
      description: The organization in which the <code data-dev-comment-type="paramref" class="paramref">environment</code> can be found.
    - id: environment
      type: System.String
      description: The environment to enqueue a new run in.
    - id: jobType
      type: System.String
      description: The type of job to enqueue a new run for.
    - id: version
      type: System.String
      description: The version of the package to use.
    - id: package
      type: System.String
      description: The package where the job is found.
    return:
      type: Task{Runly.Client.Models.Run}
      description: A newly enqueued <xref href="Runly.Client.Models.Run" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnqueueDefaultConfig(client As IRunClient, organization As String, environment As String, jobType As String, version As String = Nothing, package As String = Nothing) As Task(Of Run)
  overload: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig``1(Runly.Client.IRunClient,System.String,System.String,System.String,System.String)
  commentId: M:Runly.Client.ApiClientExtensions.EnqueueDefaultConfig``1(Runly.Client.IRunClient,System.String,System.String,System.String,System.String)
  id: EnqueueDefaultConfig``1(Runly.Client.IRunClient,System.String,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Runly.Client.ApiClientExtensions
  langs:
  - csharp
  - vb
  name: EnqueueDefaultConfig<TJob>(IRunClient, String, String, String, String)
  nameWithType: ApiClientExtensions.EnqueueDefaultConfig<TJob>(IRunClient, String, String, String, String)
  fullName: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig<TJob>(Runly.Client.IRunClient, System.String, System.String, System.String, System.String)
  type: Method
  source:
    id: EnqueueDefaultConfig
    path: /github/workspace/src/Runly/Client/ApiClientExtensions.cs
    startLine: 89
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nEnqueues a new run with the default config for the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TJob</code> in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">organization</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">environment</code>.\n"
  example: []
  syntax:
    content: >-
      public static Task<Run> EnqueueDefaultConfig<TJob>(this IRunClient client, string organization, string environment, string version = null, string package = null)
          where TJob : class
    parameters:
    - id: client
      type: Runly.Client.IRunClient
      description: The API client to use.
    - id: organization
      type: System.String
      description: The organization in which the <code data-dev-comment-type="paramref" class="paramref">environment</code> can be found.
    - id: environment
      type: System.String
      description: The environment to enqueue a new run in.
    - id: version
      type: System.String
      description: The version of the package to use.
    - id: package
      type: System.String
      description: The package where the job is found.
    typeParameters:
    - id: TJob
      description: The type of job to enqueue a new run for.
    return:
      type: Task{Runly.Client.Models.Run}
      description: A newly enqueued <xref href="Runly.Client.Models.Run" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function EnqueueDefaultConfig(Of TJob As Class)(client As IRunClient, organization As String, environment As String, version As String = Nothing, package As String = Nothing) As Task(Of Run)
  overload: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig*
  nameWithType.vb: ApiClientExtensions.EnqueueDefaultConfig(Of TJob)(IRunClient, String, String, String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig(Of TJob)(Runly.Client.IRunClient, System.String, System.String, System.String, System.String)
  name.vb: EnqueueDefaultConfig(Of TJob)(IRunClient, String, String, String, String)
references:
- uid: Runly.Client
  commentId: N:Runly.Client
  name: Runly.Client
  nameWithType: Runly.Client
  fullName: Runly.Client
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Runly.Config
  commentId: T:Runly.Config
  parent: Runly
  name: Config
  nameWithType: Config
  fullName: Runly.Config
- uid: Runly.Client.ApiClientExtensions.GetConfig*
  commentId: Overload:Runly.Client.ApiClientExtensions.GetConfig
  name: GetConfig
  nameWithType: ApiClientExtensions.GetConfig
  fullName: Runly.Client.ApiClientExtensions.GetConfig
- uid: Runly.Client.IRunClient
  commentId: T:Runly.Client.IRunClient
  parent: Runly.Client
  name: IRunClient
  nameWithType: IRunClient
  fullName: Runly.Client.IRunClient
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Task{{TConfig}}
  commentId: '!:Task{``0}'
  definition: Task`1
  name: Task<TConfig>
  nameWithType: Task<TConfig>
  fullName: Task<TConfig>
  nameWithType.vb: Task(Of TConfig)
  fullName.vb: Task(Of TConfig)
  name.vb: Task(Of TConfig)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly
  commentId: N:Runly
  name: Runly
  nameWithType: Runly
  fullName: Runly
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Client.Models.Run
  commentId: T:Runly.Client.Models.Run
  isExternal: true
- uid: Runly.Client.ApiClientExtensions.Enqueue*
  commentId: Overload:Runly.Client.ApiClientExtensions.Enqueue
  name: Enqueue
  nameWithType: ApiClientExtensions.Enqueue
  fullName: Runly.Client.ApiClientExtensions.Enqueue
- uid: Task{Runly.Client.Models.Run}
  commentId: '!:Task{Runly.Client.Models.Run}'
  definition: Task`1
  name: Task<Run>
  nameWithType: Task<Run>
  fullName: Task<Runly.Client.Models.Run>
  nameWithType.vb: Task(Of Run)
  fullName.vb: Task(Of Runly.Client.Models.Run)
  name.vb: Task(Of Run)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Runly.Client.Models.Run
    name: Run
    nameWithType: Run
    fullName: Runly.Client.Models.Run
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Runly.Client.Models.Run
    name: Run
    nameWithType: Run
    fullName: Runly.Client.Models.Run
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Client.ApiClientExtensions.EnqueueFromTemplate*
  commentId: Overload:Runly.Client.ApiClientExtensions.EnqueueFromTemplate
  name: EnqueueFromTemplate
  nameWithType: ApiClientExtensions.EnqueueFromTemplate
  fullName: Runly.Client.ApiClientExtensions.EnqueueFromTemplate
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig*
  commentId: Overload:Runly.Client.ApiClientExtensions.EnqueueDefaultConfig
  name: EnqueueDefaultConfig
  nameWithType: ApiClientExtensions.EnqueueDefaultConfig
  fullName: Runly.Client.ApiClientExtensions.EnqueueDefaultConfig
