### YamlMime:ManagedReference
items:
- uid: Runly.Client.ResultsChannel
  commentId: T:Runly.Client.ResultsChannel
  id: ResultsChannel
  parent: Runly.Client
  children:
  - Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel})
  - Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel},Action{HttpConnectionOptions})
  - Runly.Client.ResultsChannel.ConnectAsync(Guid,CancellationToken)
  - Runly.Client.ResultsChannel.RequireSendConfirmation
  langs:
  - csharp
  - vb
  name: ResultsChannel
  nameWithType: ResultsChannel
  fullName: Runly.Client.ResultsChannel
  type: Class
  source:
    id: ResultsChannel
    path: /github/workspace/src/Runly/Client/ResultsChannel.cs
    startLine: 17
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nA SignalR channel for communicating job results to the Runly API.\n"
  example: []
  syntax:
    content: 'public class ResultsChannel : object'
    content.vb: >-
      Public Class ResultsChannel
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Runly.Client.ResultsChannel.RequireSendConfirmation
  commentId: P:Runly.Client.ResultsChannel.RequireSendConfirmation
  id: RequireSendConfirmation
  parent: Runly.Client.ResultsChannel
  langs:
  - csharp
  - vb
  name: RequireSendConfirmation
  nameWithType: ResultsChannel.RequireSendConfirmation
  fullName: Runly.Client.ResultsChannel.RequireSendConfirmation
  type: Property
  source:
    id: RequireSendConfirmation
    path: /github/workspace/src/Runly/Client/ResultsChannel.cs
    startLine: 29
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nWhen true, every message sent to the server will require a confirmation when \nit has been processed. Enabling this feature will create a performance hit but\neliminate race conditions that may occur when making unit test assertions.\n"
  example: []
  syntax:
    content: public bool RequireSendConfirmation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RequireSendConfirmation As Boolean
  overload: Runly.Client.ResultsChannel.RequireSendConfirmation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel})
  commentId: M:Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel})
  id: '#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel})'
  parent: Runly.Client.ResultsChannel
  langs:
  - csharp
  - vb
  name: ResultsChannel(Uri, IAuthenticationProvider, ILogger<ResultsChannel>)
  nameWithType: ResultsChannel.ResultsChannel(Uri, IAuthenticationProvider, ILogger<ResultsChannel>)
  fullName: Runly.Client.ResultsChannel.ResultsChannel(Uri, Runly.Client.IAuthenticationProvider, ILogger<Runly.Client.ResultsChannel>)
  type: Constructor
  source:
    id: .ctor
    path: /github/workspace/src/Runly/Client/ResultsChannel.cs
    startLine: 37
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nInitializes a new <xref href=\"Runly.Client.ResultsChannel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResultsChannel(Uri baseUri, IAuthenticationProvider auth, ILogger<ResultsChannel> logger)
    parameters:
    - id: baseUri
      type: Uri
      description: The <see cref="!:Uri"></see> to the results hub.
    - id: auth
      type: Runly.Client.IAuthenticationProvider
      description: The <xref href="Runly.Client.IAuthenticationProvider" data-throw-if-not-resolved="false"></xref> to use.
    - id: logger
      type: ILogger{Runly.Client.ResultsChannel}
      description: A <see cref="!:ILogger"></see> to use.
    content.vb: Public Sub New(baseUri As Uri, auth As IAuthenticationProvider, logger As ILogger(Of ResultsChannel))
  overload: Runly.Client.ResultsChannel.#ctor*
  nameWithType.vb: ResultsChannel.ResultsChannel(Uri, IAuthenticationProvider, ILogger(Of ResultsChannel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Runly.Client.ResultsChannel.ResultsChannel(Uri, Runly.Client.IAuthenticationProvider, ILogger(Of Runly.Client.ResultsChannel))
  name.vb: ResultsChannel(Uri, IAuthenticationProvider, ILogger(Of ResultsChannel))
- uid: Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel},Action{HttpConnectionOptions})
  commentId: M:Runly.Client.ResultsChannel.#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel},Action{HttpConnectionOptions})
  id: '#ctor(Uri,Runly.Client.IAuthenticationProvider,ILogger{Runly.Client.ResultsChannel},Action{HttpConnectionOptions})'
  parent: Runly.Client.ResultsChannel
  langs:
  - csharp
  - vb
  name: ResultsChannel(Uri, IAuthenticationProvider, ILogger<ResultsChannel>, Action<HttpConnectionOptions>)
  nameWithType: ResultsChannel.ResultsChannel(Uri, IAuthenticationProvider, ILogger<ResultsChannel>, Action<HttpConnectionOptions>)
  fullName: Runly.Client.ResultsChannel.ResultsChannel(Uri, Runly.Client.IAuthenticationProvider, ILogger<Runly.Client.ResultsChannel>, Action<HttpConnectionOptions>)
  type: Constructor
  source:
    id: .ctor
    path: /github/workspace/src/Runly/Client/ResultsChannel.cs
    startLine: 47
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nInitializes a new <xref href=\"Runly.Client.ResultsChannel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ResultsChannel(Uri baseUri, IAuthenticationProvider auth, ILogger<ResultsChannel> logger, Action<HttpConnectionOptions> opts)
    parameters:
    - id: baseUri
      type: Uri
      description: The <see cref="!:Uri"></see> to the results hub.
    - id: auth
      type: Runly.Client.IAuthenticationProvider
      description: The <xref href="Runly.Client.IAuthenticationProvider" data-throw-if-not-resolved="false"></xref> to use.
    - id: logger
      type: ILogger{Runly.Client.ResultsChannel}
      description: A <see cref="!:ILogger"></see> to use.
    - id: opts
      type: Action{HttpConnectionOptions}
      description: Action to modify <see cref="!:HttpConnectionOptions"></see>.
    content.vb: Public Sub New(baseUri As Uri, auth As IAuthenticationProvider, logger As ILogger(Of ResultsChannel), opts As Action(Of HttpConnectionOptions))
  overload: Runly.Client.ResultsChannel.#ctor*
  nameWithType.vb: ResultsChannel.ResultsChannel(Uri, IAuthenticationProvider, ILogger(Of ResultsChannel), Action(Of HttpConnectionOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Runly.Client.ResultsChannel.ResultsChannel(Uri, Runly.Client.IAuthenticationProvider, ILogger(Of Runly.Client.ResultsChannel), Action(Of HttpConnectionOptions))
  name.vb: ResultsChannel(Uri, IAuthenticationProvider, ILogger(Of ResultsChannel), Action(Of HttpConnectionOptions))
- uid: Runly.Client.ResultsChannel.ConnectAsync(Guid,CancellationToken)
  commentId: M:Runly.Client.ResultsChannel.ConnectAsync(Guid,CancellationToken)
  id: ConnectAsync(Guid,CancellationToken)
  parent: Runly.Client.ResultsChannel
  langs:
  - csharp
  - vb
  name: ConnectAsync(Guid, CancellationToken)
  nameWithType: ResultsChannel.ConnectAsync(Guid, CancellationToken)
  fullName: Runly.Client.ResultsChannel.ConnectAsync(Guid, CancellationToken)
  type: Method
  source:
    id: ConnectAsync
    path: /github/workspace/src/Runly/Client/ResultsChannel.cs
    startLine: 61
  assemblies:
  - Runly
  namespace: Runly.Client
  summary: "\nCreates a connection to the results hub.\n"
  example: []
  syntax:
    content: public Task<ResultsChannel.Connection> ConnectAsync(Guid instanceId, CancellationToken token = null)
    parameters:
    - id: instanceId
      type: Guid
      description: The run&apos;s instance ID.
    - id: token
      type: CancellationToken
      description: The token to trigger cancellation.
    return:
      type: Task{Runly.Client.ResultsChannel.Connection}
      description: A <xref href="Runly.Client.ResultsChannel.Connection" data-throw-if-not-resolved="false"></xref> to the results hub.
    content.vb: Public Function ConnectAsync(instanceId As Guid, token As CancellationToken = Nothing) As Task(Of ResultsChannel.Connection)
  overload: Runly.Client.ResultsChannel.ConnectAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Runly.Client
  commentId: N:Runly.Client
  name: Runly.Client
  nameWithType: Runly.Client
  fullName: Runly.Client
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Runly.Client.ResultsChannel.RequireSendConfirmation*
  commentId: Overload:Runly.Client.ResultsChannel.RequireSendConfirmation
  name: RequireSendConfirmation
  nameWithType: ResultsChannel.RequireSendConfirmation
  fullName: Runly.Client.ResultsChannel.RequireSendConfirmation
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Runly.Client.ResultsChannel
  commentId: T:Runly.Client.ResultsChannel
  name: ResultsChannel
  nameWithType: ResultsChannel
  fullName: Runly.Client.ResultsChannel
- uid: Runly.Client.IAuthenticationProvider
  commentId: T:Runly.Client.IAuthenticationProvider
  parent: Runly.Client
  name: IAuthenticationProvider
  nameWithType: IAuthenticationProvider
  fullName: Runly.Client.IAuthenticationProvider
- uid: Runly.Client.ResultsChannel.#ctor*
  commentId: Overload:Runly.Client.ResultsChannel.#ctor
  name: ResultsChannel
  nameWithType: ResultsChannel.ResultsChannel
  fullName: Runly.Client.ResultsChannel.ResultsChannel
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: ILogger{Runly.Client.ResultsChannel}
  commentId: '!:ILogger{Runly.Client.ResultsChannel}'
  definition: ILogger`1
  name: ILogger<ResultsChannel>
  nameWithType: ILogger<ResultsChannel>
  fullName: ILogger<Runly.Client.ResultsChannel>
  nameWithType.vb: ILogger(Of ResultsChannel)
  fullName.vb: ILogger(Of Runly.Client.ResultsChannel)
  name.vb: ILogger(Of ResultsChannel)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Runly.Client.ResultsChannel
    name: ResultsChannel
    nameWithType: ResultsChannel
    fullName: Runly.Client.ResultsChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Runly.Client.ResultsChannel
    name: ResultsChannel
    nameWithType: ResultsChannel
    fullName: Runly.Client.ResultsChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{HttpConnectionOptions}
  commentId: '!:Action{HttpConnectionOptions}'
  definition: Action`1
  name: Action<HttpConnectionOptions>
  nameWithType: Action<HttpConnectionOptions>
  fullName: Action<HttpConnectionOptions>
  nameWithType.vb: Action(Of HttpConnectionOptions)
  fullName.vb: Action(Of HttpConnectionOptions)
  name.vb: Action(Of HttpConnectionOptions)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HttpConnectionOptions
    name: HttpConnectionOptions
    nameWithType: HttpConnectionOptions
    fullName: HttpConnectionOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HttpConnectionOptions
    name: HttpConnectionOptions
    nameWithType: HttpConnectionOptions
    fullName: HttpConnectionOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Client.ResultsChannel.Connection
  commentId: T:Runly.Client.ResultsChannel.Connection
  name: ResultsChannel.Connection
  nameWithType: ResultsChannel.Connection
  fullName: Runly.Client.ResultsChannel.Connection
- uid: Runly.Client.ResultsChannel.ConnectAsync*
  commentId: Overload:Runly.Client.ResultsChannel.ConnectAsync
  name: ConnectAsync
  nameWithType: ResultsChannel.ConnectAsync
  fullName: Runly.Client.ResultsChannel.ConnectAsync
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task{Runly.Client.ResultsChannel.Connection}
  commentId: '!:Task{Runly.Client.ResultsChannel.Connection}'
  definition: Task`1
  name: Task<ResultsChannel.Connection>
  nameWithType: Task<ResultsChannel.Connection>
  fullName: Task<Runly.Client.ResultsChannel.Connection>
  nameWithType.vb: Task(Of ResultsChannel.Connection)
  fullName.vb: Task(Of Runly.Client.ResultsChannel.Connection)
  name.vb: Task(Of ResultsChannel.Connection)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Runly.Client.ResultsChannel.Connection
    name: ResultsChannel.Connection
    nameWithType: ResultsChannel.Connection
    fullName: Runly.Client.ResultsChannel.Connection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Runly.Client.ResultsChannel.Connection
    name: ResultsChannel.Connection
    nameWithType: ResultsChannel.Connection
    fullName: Runly.Client.ResultsChannel.Connection
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
