### YamlMime:ManagedReference
items:
- uid: Runly.Hosting.JobInfo
  commentId: T:Runly.Hosting.JobInfo
  id: JobInfo
  parent: Runly.Hosting
  children:
  - Runly.Hosting.JobInfo.#ctor(Type)
  - Runly.Hosting.JobInfo.ConfigType
  - Runly.Hosting.JobInfo.Dependencies
  - Runly.Hosting.JobInfo.Errors
  - Runly.Hosting.JobInfo.IsValid
  - Runly.Hosting.JobInfo.ItemType
  - Runly.Hosting.JobInfo.JobType
  langs:
  - csharp
  - vb
  name: JobInfo
  nameWithType: JobInfo
  fullName: Runly.Hosting.JobInfo
  type: Class
  source:
    id: JobInfo
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 8
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nStores the information required to use and run jobs.\n"
  example: []
  syntax:
    content: 'public class JobInfo : object'
    content.vb: >-
      Public Class JobInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Runly.Hosting.JobInfo.JobType
  commentId: P:Runly.Hosting.JobInfo.JobType
  id: JobType
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: JobType
  nameWithType: JobInfo.JobType
  fullName: Runly.Hosting.JobInfo.JobType
  type: Property
  source:
    id: JobType
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 13
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nThe <see cref=\"!:Type\"></see> of the job.\n"
  example: []
  syntax:
    content: public Type JobType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property JobType As Type
  overload: Runly.Hosting.JobInfo.JobType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.ItemType
  commentId: P:Runly.Hosting.JobInfo.ItemType
  id: ItemType
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: ItemType
  nameWithType: JobInfo.ItemType
  fullName: Runly.Hosting.JobInfo.ItemType
  type: Property
  source:
    id: ItemType
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 18
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nThe <see cref=\"!:Type\"></see> of the item the job works with.\n"
  example: []
  syntax:
    content: public Type ItemType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property ItemType As Type
  overload: Runly.Hosting.JobInfo.ItemType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.ConfigType
  commentId: P:Runly.Hosting.JobInfo.ConfigType
  id: ConfigType
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: ConfigType
  nameWithType: JobInfo.ConfigType
  fullName: Runly.Hosting.JobInfo.ConfigType
  type: Property
  source:
    id: ConfigType
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 23
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nThe <see cref=\"!:Type\"></see> of <xref href=\"Runly.Config\" data-throw-if-not-resolved=\"false\"></xref> the job uses.\n"
  example: []
  syntax:
    content: public Type ConfigType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property ConfigType As Type
  overload: Runly.Hosting.JobInfo.ConfigType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.Dependencies
  commentId: P:Runly.Hosting.JobInfo.Dependencies
  id: Dependencies
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: JobInfo.Dependencies
  fullName: Runly.Hosting.JobInfo.Dependencies
  type: Property
  source:
    id: Dependencies
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 28
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nThe <see cref=\"!:Type\">Types</see> of the parameters for ProcessAsync.\n"
  example: []
  syntax:
    content: public Type[] Dependencies { get; }
    parameters: []
    return:
      type: Type[]
    content.vb: Public ReadOnly Property Dependencies As Type()
  overload: Runly.Hosting.JobInfo.Dependencies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.Errors
  commentId: P:Runly.Hosting.JobInfo.Errors
  id: Errors
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: JobInfo.Errors
  fullName: Runly.Hosting.JobInfo.Errors
  type: Property
  source:
    id: Errors
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 33
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nThe reasons why the <xref href=\"Runly.Hosting.JobInfo.JobType\" data-throw-if-not-resolved=\"false\"></xref> cannot be used as a job.\n"
  example: []
  syntax:
    content: public JobLoadErrors Errors { get; }
    parameters: []
    return:
      type: Runly.Hosting.JobLoadErrors
    content.vb: Public ReadOnly Property Errors As JobLoadErrors
  overload: Runly.Hosting.JobInfo.Errors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.IsValid
  commentId: P:Runly.Hosting.JobInfo.IsValid
  id: IsValid
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: JobInfo.IsValid
  fullName: Runly.Hosting.JobInfo.IsValid
  type: Property
  source:
    id: IsValid
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 38
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nIndicates whether there are any errors with the <xref href=\"Runly.Hosting.JobInfo.JobType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: Runly.Hosting.JobInfo.IsValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Runly.Hosting.JobInfo.#ctor(Type)
  commentId: M:Runly.Hosting.JobInfo.#ctor(Type)
  id: '#ctor(Type)'
  parent: Runly.Hosting.JobInfo
  langs:
  - csharp
  - vb
  name: JobInfo(Type)
  nameWithType: JobInfo.JobInfo(Type)
  fullName: Runly.Hosting.JobInfo.JobInfo(Type)
  type: Constructor
  source:
    id: .ctor
    path: /github/workspace/src/Runly/Hosting/JobInfo.cs
    startLine: 44
  assemblies:
  - Runly
  namespace: Runly.Hosting
  summary: "\nInitializes a new <xref href=\"Runly.Hosting.JobInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JobInfo(Type jobType)
    parameters:
    - id: jobType
      type: Type
      description: The <see cref="!:Type"></see> of the job.
    content.vb: Public Sub New(jobType As Type)
  overload: Runly.Hosting.JobInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Runly.Hosting
  commentId: N:Runly.Hosting
  name: Runly.Hosting
  nameWithType: Runly.Hosting
  fullName: Runly.Hosting
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Runly.Hosting.JobInfo.JobType*
  commentId: Overload:Runly.Hosting.JobInfo.JobType
  name: JobType
  nameWithType: JobInfo.JobType
  fullName: Runly.Hosting.JobInfo.JobType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Runly.Hosting.JobInfo.ItemType*
  commentId: Overload:Runly.Hosting.JobInfo.ItemType
  name: ItemType
  nameWithType: JobInfo.ItemType
  fullName: Runly.Hosting.JobInfo.ItemType
- uid: Runly.Config
  commentId: T:Runly.Config
  parent: Runly
  name: Config
  nameWithType: Config
  fullName: Runly.Config
- uid: Runly.Hosting.JobInfo.ConfigType*
  commentId: Overload:Runly.Hosting.JobInfo.ConfigType
  name: ConfigType
  nameWithType: JobInfo.ConfigType
  fullName: Runly.Hosting.JobInfo.ConfigType
- uid: Runly
  commentId: N:Runly
  name: Runly
  nameWithType: Runly
  fullName: Runly
- uid: Runly.Hosting.JobInfo.Dependencies*
  commentId: Overload:Runly.Hosting.JobInfo.Dependencies
  name: Dependencies
  nameWithType: JobInfo.Dependencies
  fullName: Runly.Hosting.JobInfo.Dependencies
- uid: Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: Type[]
  nameWithType.vb: Type()
  fullName.vb: Type()
  name.vb: Type()
  spec.csharp:
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Runly.Hosting.JobInfo.JobType
  commentId: P:Runly.Hosting.JobInfo.JobType
  isExternal: true
- uid: Runly.Hosting.JobInfo.Errors*
  commentId: Overload:Runly.Hosting.JobInfo.Errors
  name: Errors
  nameWithType: JobInfo.Errors
  fullName: Runly.Hosting.JobInfo.Errors
- uid: Runly.Hosting.JobLoadErrors
  commentId: T:Runly.Hosting.JobLoadErrors
  parent: Runly.Hosting
  name: JobLoadErrors
  nameWithType: JobLoadErrors
  fullName: Runly.Hosting.JobLoadErrors
- uid: Runly.Hosting.JobInfo.IsValid*
  commentId: Overload:Runly.Hosting.JobInfo.IsValid
  name: IsValid
  nameWithType: JobInfo.IsValid
  fullName: Runly.Hosting.JobInfo.IsValid
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Runly.Hosting.JobInfo
  commentId: T:Runly.Hosting.JobInfo
  parent: Runly.Hosting
  name: JobInfo
  nameWithType: JobInfo
  fullName: Runly.Hosting.JobInfo
- uid: Runly.Hosting.JobInfo.#ctor*
  commentId: Overload:Runly.Hosting.JobInfo.#ctor
  name: JobInfo
  nameWithType: JobInfo.JobInfo
  fullName: Runly.Hosting.JobInfo.JobInfo
