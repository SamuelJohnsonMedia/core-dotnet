### YamlMime:ManagedReference
items:
- uid: Runly.Testing.TestHost`1
  commentId: T:Runly.Testing.TestHost`1
  id: TestHost`1
  parent: Runly.Testing
  children:
  - Runly.Testing.TestHost`1.#ctor(Runly.Config)
  - Runly.Testing.TestHost`1.BuildRunner
  - Runly.Testing.TestHost`1.ConfigureServices(Action{IServiceCollection})
  langs:
  - csharp
  - vb
  name: TestHost<TJob>
  nameWithType: TestHost<TJob>
  fullName: Runly.Testing.TestHost<TJob>
  type: Class
  source:
    id: TestHost
    path: /github/workspace/src/Runly/Testing/TestHost.cs
    startLine: 9
  assemblies:
  - Runly
  namespace: Runly.Testing
  summary: "\nA program initialization abstraction for testing Runly jobs.\n"
  example: []
  syntax:
    content: 'public class TestHost<TJob> : object where TJob : IJob'
    typeParameters:
    - id: TJob
      description: The type of <xref href="Runly.IJob" data-throw-if-not-resolved="false"></xref> being tested.
    content.vb: >-
      Public Class TestHost(Of TJob As IJob)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: TestHost(Of TJob)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Runly.Testing.TestHost(Of TJob)
  name.vb: TestHost(Of TJob)
- uid: Runly.Testing.TestHost`1.#ctor(Runly.Config)
  commentId: M:Runly.Testing.TestHost`1.#ctor(Runly.Config)
  id: '#ctor(Runly.Config)'
  parent: Runly.Testing.TestHost`1
  langs:
  - csharp
  - vb
  name: TestHost(Config)
  nameWithType: TestHost<TJob>.TestHost(Config)
  fullName: Runly.Testing.TestHost<TJob>.TestHost(Runly.Config)
  type: Constructor
  source:
    id: .ctor
    path: /github/workspace/src/Runly/Testing/TestHost.cs
    startLine: 19
  assemblies:
  - Runly
  namespace: Runly.Testing
  summary: "\nInitializes the <xref href=\"Runly.Testing.TestHost%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TestHost(Config config)
    parameters:
    - id: config
      type: Runly.Config
      description: The config for the <xref href="Runly.IJob" data-throw-if-not-resolved="false"></xref> to run.
    content.vb: Public Sub New(config As Config)
  overload: Runly.Testing.TestHost`1.#ctor*
  nameWithType.vb: TestHost(Of TJob).TestHost(Config)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Runly.Testing.TestHost(Of TJob).TestHost(Runly.Config)
- uid: Runly.Testing.TestHost`1.ConfigureServices(Action{IServiceCollection})
  commentId: M:Runly.Testing.TestHost`1.ConfigureServices(Action{IServiceCollection})
  id: ConfigureServices(Action{IServiceCollection})
  parent: Runly.Testing.TestHost`1
  langs:
  - csharp
  - vb
  name: ConfigureServices(Action<IServiceCollection>)
  nameWithType: TestHost<TJob>.ConfigureServices(Action<IServiceCollection>)
  fullName: Runly.Testing.TestHost<TJob>.ConfigureServices(Action<IServiceCollection>)
  type: Method
  source:
    id: ConfigureServices
    path: /github/workspace/src/Runly/Testing/TestHost.cs
    startLine: 32
  assemblies:
  - Runly
  namespace: Runly.Testing
  summary: "\nAdds services to the container. This can be called multiple times and the results will be additive.\n"
  example: []
  syntax:
    content: public TestHost<TJob> ConfigureServices(Action<IServiceCollection> configureDelegate)
    parameters:
    - id: configureDelegate
      type: Action{IServiceCollection}
      description: The delegate for configuring the <see cref="!:IServiceCollection"></see> that will be used to construct the <see cref="!:IServiceProvider"></see>.
    return:
      type: Runly.Testing.TestHost`1
      description: The same instance of the <xref href="Runly.Testing.TestHost%601" data-throw-if-not-resolved="false"></xref> for chaining.
    content.vb: Public Function ConfigureServices(configureDelegate As Action(Of IServiceCollection)) As TestHost(Of TJob)
  overload: Runly.Testing.TestHost`1.ConfigureServices*
  nameWithType.vb: TestHost(Of TJob).ConfigureServices(Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Runly.Testing.TestHost(Of TJob).ConfigureServices(Action(Of IServiceCollection))
  name.vb: ConfigureServices(Action(Of IServiceCollection))
- uid: Runly.Testing.TestHost`1.BuildRunner
  commentId: M:Runly.Testing.TestHost`1.BuildRunner
  id: BuildRunner
  parent: Runly.Testing.TestHost`1
  langs:
  - csharp
  - vb
  name: BuildRunner()
  nameWithType: TestHost<TJob>.BuildRunner()
  fullName: Runly.Testing.TestHost<TJob>.BuildRunner()
  type: Method
  source:
    id: BuildRunner
    path: /github/workspace/src/Runly/Testing/TestHost.cs
    startLine: 41
  assemblies:
  - Runly
  namespace: Runly.Testing
  summary: "\nCreates a new <xref href=\"Runly.Testing.TestRun%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TestRun<TJob> BuildRunner()
    return:
      type: Runly.Testing.TestRun{{TJob}}
    content.vb: Public Function BuildRunner As TestRun(Of TJob)
  overload: Runly.Testing.TestHost`1.BuildRunner*
  nameWithType.vb: TestHost(Of TJob).BuildRunner()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Runly.Testing.TestHost(Of TJob).BuildRunner()
references:
- uid: Runly.IJob
  commentId: T:Runly.IJob
  parent: Runly
  name: IJob
  nameWithType: IJob
  fullName: Runly.IJob
- uid: Runly.Testing
  commentId: N:Runly.Testing
  name: Runly.Testing
  nameWithType: Runly.Testing
  fullName: Runly.Testing
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Runly
  commentId: N:Runly
  name: Runly
  nameWithType: Runly
  fullName: Runly
- uid: Runly.Testing.TestHost`1
  commentId: T:Runly.Testing.TestHost`1
  parent: Runly.Testing
  name: TestHost<TJob>
  nameWithType: TestHost<TJob>
  fullName: Runly.Testing.TestHost<TJob>
  nameWithType.vb: TestHost(Of TJob)
  fullName.vb: Runly.Testing.TestHost(Of TJob)
  name.vb: TestHost(Of TJob)
  spec.csharp:
  - uid: Runly.Testing.TestHost`1
    name: TestHost
    nameWithType: TestHost
    fullName: Runly.Testing.TestHost
  - name: <
    nameWithType: <
    fullName: <
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Runly.Testing.TestHost`1
    name: TestHost
    nameWithType: TestHost
    fullName: Runly.Testing.TestHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Testing.TestHost`1.#ctor*
  commentId: Overload:Runly.Testing.TestHost`1.#ctor
  name: TestHost
  nameWithType: TestHost<TJob>.TestHost
  fullName: Runly.Testing.TestHost<TJob>.TestHost
  nameWithType.vb: TestHost(Of TJob).TestHost
  fullName.vb: Runly.Testing.TestHost(Of TJob).TestHost
- uid: Runly.Config
  commentId: T:Runly.Config
  parent: Runly
  name: Config
  nameWithType: Config
  fullName: Runly.Config
- uid: Runly.Testing.TestHost`1.ConfigureServices*
  commentId: Overload:Runly.Testing.TestHost`1.ConfigureServices
  name: ConfigureServices
  nameWithType: TestHost<TJob>.ConfigureServices
  fullName: Runly.Testing.TestHost<TJob>.ConfigureServices
  nameWithType.vb: TestHost(Of TJob).ConfigureServices
  fullName.vb: Runly.Testing.TestHost(Of TJob).ConfigureServices
- uid: Action{IServiceCollection}
  commentId: '!:Action{IServiceCollection}'
  definition: Action`1
  name: Action<IServiceCollection>
  nameWithType: Action<IServiceCollection>
  fullName: Action<IServiceCollection>
  nameWithType.vb: Action(Of IServiceCollection)
  fullName.vb: Action(Of IServiceCollection)
  name.vb: Action(Of IServiceCollection)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Testing.TestRun`1
  commentId: T:Runly.Testing.TestRun`1
  name: TestRun<TJob>
  nameWithType: TestRun<TJob>
  fullName: Runly.Testing.TestRun<TJob>
  nameWithType.vb: TestRun(Of TJob)
  fullName.vb: Runly.Testing.TestRun(Of TJob)
  name.vb: TestRun(Of TJob)
  spec.csharp:
  - uid: Runly.Testing.TestRun`1
    name: TestRun
    nameWithType: TestRun
    fullName: Runly.Testing.TestRun
  - name: <
    nameWithType: <
    fullName: <
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Runly.Testing.TestRun`1
    name: TestRun
    nameWithType: TestRun
    fullName: Runly.Testing.TestRun
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Runly.Testing.TestHost`1.BuildRunner*
  commentId: Overload:Runly.Testing.TestHost`1.BuildRunner
  name: BuildRunner
  nameWithType: TestHost<TJob>.BuildRunner
  fullName: Runly.Testing.TestHost<TJob>.BuildRunner
  nameWithType.vb: TestHost(Of TJob).BuildRunner
  fullName.vb: Runly.Testing.TestHost(Of TJob).BuildRunner
- uid: Runly.Testing.TestRun{{TJob}}
  commentId: T:Runly.Testing.TestRun{`0}
  parent: Runly.Testing
  definition: Runly.Testing.TestRun`1
  name: TestRun<TJob>
  nameWithType: TestRun<TJob>
  fullName: Runly.Testing.TestRun<TJob>
  nameWithType.vb: TestRun(Of TJob)
  fullName.vb: Runly.Testing.TestRun(Of TJob)
  name.vb: TestRun(Of TJob)
  spec.csharp:
  - uid: Runly.Testing.TestRun`1
    name: TestRun
    nameWithType: TestRun
    fullName: Runly.Testing.TestRun
  - name: <
    nameWithType: <
    fullName: <
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Runly.Testing.TestRun`1
    name: TestRun
    nameWithType: TestRun
    fullName: Runly.Testing.TestRun
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: )
    nameWithType: )
    fullName: )
